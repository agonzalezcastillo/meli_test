plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id "org.sonarqube" version "2.7"
}

apply from: './jacoco.gradle'
apply plugin: 'org.sonarqube'

group = 'com.meli.test'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

afterEvaluate {
    sonarqube {
        properties {
            properties["sonar.jacoco.reportPath"] = "${buildDir}/jacoco/test.exec"
            properties["sonar.coverage.exclusions"] = "**/*Application.java,**/*DTO.java"            
        }
    }
}


repositories {
	mavenCentral()
}

dependencies {		
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'	
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	
    // https://mvnrepository.com/artifact/junit/junit
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile('org.springframework.boot:spring-boot-starter-test')        		

}

test {
	useJUnitPlatform()
}
